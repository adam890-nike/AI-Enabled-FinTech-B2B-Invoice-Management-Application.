{"ast":null,"code":"import _slicedToArray from \"D:\\\\highradius\\\\HRC\\\\HRC123-front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\highradius\\\\HRC\\\\HRC123-front_end\\\\src\\\\component\\\\options\\\\AnalyticsView.js\";\nimport { Alert, Button, Container, Grid, IconButton, Snackbar, TextField, Typography } from \"@mui/material\";\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction AnalyticsView(_ref) {\n  var onAnalyticsClick = _ref.onAnalyticsClick,\n      onCancelClick = _ref.onCancelClick;\n\n  var _useState = useState([\"\", \"\"]),\n      _useState2 = _slicedToArray(_useState, 2),\n      clearDate = _useState2[0],\n      setClearDate = _useState2[1];\n\n  var _useState3 = useState([\"\", \"\"]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dueDate = _useState4[0],\n      setDueDate = _useState4[1];\n\n  var _useState5 = useState([\"\", \"\"]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      baselineDate = _useState6[0],\n      setBaselineDate = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      invoiceCurr = _useState8[0],\n      setInvoiceCurr = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showAlert = _useState10[0],\n      setShowAlert = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      invalidCols = _useState12[0],\n      setInvalidCols = _useState12[1];\n\n  var validateData = function validateData() {\n    if (clearDate[0] && !clearDate[1] || clearDate[1] && !clearDate[0] || dueDate[0] && !dueDate[1] || dueDate[1] && !dueDate[0] || baselineDate[0] && !baselineDate[1] || baselineDate[1] && !baselineDate[0]) {\n      setShowAlert(true);\n    } else {\n      onAnalyticsClick(clearDate, dueDate, baselineDate, invoiceCurr);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    sx: {\n      mb: 2,\n      mt: 3,\n      maxWidth: \"600px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }, \"Clear Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"0.4rem 0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"date\",\n    label: \"From\",\n    required: false,\n    value: clearDate[0],\n    onChange: function onChange(e) {\n      var cleardate = [e.target.value, clearDate[1]];\n      setClearDate(cleardate);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"0.4rem 0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"date\",\n    label: \"To\",\n    required: false,\n    value: clearDate[1],\n    onChange: function onChange(e) {\n      var cleardate = [clearDate[0], e.target.value];\n      setClearDate(cleardate);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }, \"Due Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"0.4rem 0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"date\",\n    label: \"From\",\n    required: false,\n    value: dueDate[0],\n    onChange: function onChange(e) {\n      var duedate = [e.target.value, dueDate[1]];\n      setDueDate(duedate);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"0.4rem 0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"date\",\n    label: \"To\",\n    required: false,\n    value: dueDate[1],\n    onChange: function onChange(e) {\n      var duedate = [dueDate[0], e.target.value];\n      setDueDate(duedate);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, \"Baseline Create Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"0.4rem 0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"date\",\n    label: \"From\",\n    required: false,\n    value: baselineDate[0],\n    onChange: function onChange(e) {\n      var baselinedate = [e.target.value, baselineDate[1]];\n      setBaselineDate(baselinedate);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"0.4rem 0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"date\",\n    label: \"To\",\n    required: false,\n    value: baselineDate[1],\n    onChange: function onChange(e) {\n      var baselinedate = [baselineDate[0], e.target.value];\n      setBaselineDate(baselinedate);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  }, \"Invoice Currency\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"0.4rem 0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Invoice Currency\",\n    required: false,\n    value: invoiceCurr,\n    onChange: function onChange(e) {\n      setInvoiceCurr(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 37\n    }\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    sx: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      validateData();\n    },\n    style: {\n      marginRight: \"0.3rem\"\n    },\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onCancelClick,\n    style: {\n      marginLeft: \"0.3rem\"\n    },\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, \"Cancel\")))), /*#__PURE__*/React.createElement(Snackbar, {\n    open: showAlert,\n    autoHideDuration: 3500,\n    onClose: function onClose() {\n      return setShowAlert(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, \"Make sure to fill both \\\"from/to\\\" column\")));\n}\n\nexport default AnalyticsView;","map":{"version":3,"sources":["D:/highradius/HRC/HRC123-front_end/src/component/options/AnalyticsView.js"],"names":["Alert","Button","Container","Grid","IconButton","Snackbar","TextField","Typography","RefreshIcon","React","useEffect","useState","AnalyticsView","onAnalyticsClick","onCancelClick","clearDate","setClearDate","dueDate","setDueDate","baselineDate","setBaselineDate","invoiceCurr","setInvoiceCurr","showAlert","setShowAlert","invalidCols","setInvalidCols","validateData","mb","mt","maxWidth","margin","e","cleardate","target","value","duedate","baselinedate","display","marginRight","marginLeft"],"mappings":"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","sourcesContent":["\r\nimport {\r\n    Alert,\r\n    Button,\r\n    Container,\r\n    Grid,\r\n    IconButton,\r\n    Snackbar,\r\n    TextField,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction AnalyticsView({ onAnalyticsClick, onCancelClick }) {\r\n    const [clearDate, setClearDate] = useState([\"\", \"\"]);\r\n    const [dueDate, setDueDate] = useState([\"\", \"\"]);\r\n    const [baselineDate, setBaselineDate] = useState([\"\", \"\"]);\r\n    const [invoiceCurr, setInvoiceCurr] = useState(\"\");\r\n    const [showAlert, setShowAlert] = useState(false);\r\n\r\n    const [invalidCols, setInvalidCols] = useState([]);\r\n    const validateData = () => {\r\n        if (\r\n            (clearDate[0] && !clearDate[1]) ||\r\n            (clearDate[1] && !clearDate[0]) ||\r\n            (dueDate[0] && !dueDate[1]) ||\r\n            (dueDate[1] && !dueDate[0]) ||\r\n            (baselineDate[0] && !baselineDate[1]) ||\r\n            (baselineDate[1] && !baselineDate[0])\r\n        ) {\r\n            setShowAlert(true);\r\n        } else {\r\n            onAnalyticsClick(clearDate, dueDate, baselineDate, invoiceCurr);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid\r\n                container\r\n                direction={\"column\"}\r\n                spacing={2}\r\n                sx={{ mb: 2, mt: 3, maxWidth: \"600px\" }}\r\n            >\r\n                <Grid item>\r\n                    {/* textfields */}\r\n                    <Container>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} md={6}>\r\n                                {/* Clear date */}\r\n                                <Typography>Clear Date</Typography>\r\n                                <div style={{ margin: \"0.4rem 0.5rem\" }}>\r\n                                    <TextField\r\n                                        type={\"date\"}\r\n                                        label=\"From\"\r\n                                        required={false}\r\n                                        value={clearDate[0]}\r\n                                        onChange={(e) => {\r\n                                            let cleardate = [\r\n                                                e.target.value,\r\n                                                clearDate[1],\r\n                                            ];\r\n\r\n                                            setClearDate(cleardate);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div style={{ margin: \"0.4rem 0.5rem\" }}>\r\n                                    <TextField\r\n                                        type={\"date\"}\r\n                                        label=\"To\"\r\n                                        required={false}\r\n                                        value={clearDate[1]}\r\n                                        onChange={(e) => {\r\n                                            let cleardate = [\r\n                                                clearDate[0],\r\n                                                e.target.value,\r\n                                            ];\r\n                                            setClearDate(cleardate);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                {/* Due date */}\r\n                                <Typography>Due Date</Typography>\r\n                                <div style={{ margin: \"0.4rem 0.5rem\" }}>\r\n                                    <TextField\r\n                                        type={\"date\"}\r\n                                        label=\"From\"\r\n                                        required={false}\r\n                                        value={dueDate[0]}\r\n                                        onChange={(e) => {\r\n                                            let duedate = [\r\n                                                e.target.value,\r\n                                                dueDate[1],\r\n                                            ];\r\n                                            setDueDate(duedate);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div style={{ margin: \"0.4rem 0.5rem\" }}>\r\n                                    <TextField\r\n                                        type={\"date\"}\r\n                                        label=\"To\"\r\n                                        required={false}\r\n                                        value={dueDate[1]}\r\n                                        onChange={(e) => {\r\n                                            let duedate = [\r\n                                                dueDate[0],\r\n                                                e.target.value,\r\n                                            ];\r\n                                            setDueDate(duedate);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                {/* Baseline Create Date */}\r\n                                <Typography>Baseline Create Date</Typography>\r\n                                <div style={{ margin: \"0.4rem 0.5rem\" }}>\r\n                                    <TextField\r\n                                        type={\"date\"}\r\n                                        label=\"From\"\r\n                                        required={false}\r\n                                        value={baselineDate[0]}\r\n                                        onChange={(e) => {\r\n                                            let baselinedate = [\r\n                                                e.target.value,\r\n                                                baselineDate[1],\r\n                                            ];\r\n                                            setBaselineDate(baselinedate);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div style={{ margin: \"0.4rem 0.5rem\" }}>\r\n                                    <TextField\r\n                                        type={\"date\"}\r\n                                        label=\"To\"\r\n                                        required={false}\r\n                                        value={baselineDate[1]}\r\n                                        onChange={(e) => {\r\n                                            let baselinedate = [\r\n                                                baselineDate[0],\r\n                                                e.target.value,\r\n                                            ];\r\n                                            setBaselineDate(baselinedate);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                {/* Invoice Currency */}\r\n                                <Typography>Invoice Currency</Typography>\r\n                                <div style={{ margin: \"0.4rem 0.5rem\" }}>\r\n                                    <TextField\r\n                                        label=\"Invoice Currency\"\r\n                                        required={false}\r\n                                        value={invoiceCurr}\r\n                                        onChange={(e) => {\r\n                                            setInvoiceCurr(e.target.value);\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                </Grid>\r\n                {/* buttons */}\r\n                <Grid item>\r\n                    <Container sx={{ display: \"flex\" }}>\r\n                        <button\r\n                            onClick={() => {\r\n                                validateData();\r\n                            }}\r\n                            style={{ marginRight: \"0.3rem\" }}\r\n                            className=\"btn\"\r\n                        >\r\n                            Search\r\n                        </button>\r\n                        <button\r\n                            onClick={onCancelClick}\r\n                            style={{ marginLeft: \"0.3rem\" }}\r\n                            className=\"btn\"\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                    </Container>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Snackbar\r\n                open={showAlert}\r\n                autoHideDuration={3500}\r\n                onClose={() => setShowAlert(false)}\r\n            >\r\n                <Alert severity={\"error\"}>\r\n                    Make sure to fill both \"from/to\" column\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AnalyticsView;\r\n"]},"metadata":{},"sourceType":"module"}