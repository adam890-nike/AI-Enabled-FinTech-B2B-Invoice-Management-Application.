{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\highradius\\\\HRC\\\\HRC123-front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\highradius\\\\HRC\\\\HRC123-front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\n\nvar predictData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dataObject) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.post(\"http://127.0.0.1:5000/get_prediction\", dataObject, {\n              params: {\n                type: \"post\"\n              },\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            throw _context.t0;\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n\n  return function predictData(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default predictData;","map":{"version":3,"sources":["D:/highradius/HRC/HRC123-front_end/src/component/crudOperations/predictData.js"],"names":["axios","predictData","dataObject","post","params","type","headers"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,WAAW;AAAA,sEAAG,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAECF,KAAK,CAACG,IAAN,CAAW,sCAAX,EAAmDD,UAAnD,EAA+D;AACxEE,cAAAA,MAAM,EAAE;AACJC,gBAAAA,IAAI,EAAE;AADF,eADgE;AAIxEC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX;AAJ+D,aAA/D,CAFD;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXL,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAgBA,eAAeA,WAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst predictData = async (dataObject) => { \r\n    try {\r\n        return await axios.post(\"http://127.0.0.1:5000/get_prediction\", dataObject, {\r\n            params: {\r\n                type: \"post\",\r\n            },\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        });\r\n        \r\n    } catch (e) {\r\n        throw e;\r\n    }\r\n};\r\n\r\nexport default predictData;"]},"metadata":{},"sourceType":"module"}