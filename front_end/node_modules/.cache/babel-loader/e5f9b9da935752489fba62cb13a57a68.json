{"ast":null,"code":"import _slicedToArray from \"D:\\\\highradius\\\\HRC\\\\front_end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\highradius\\\\HRC\\\\front_end\\\\src\\\\component\\\\Dashboard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Alert, Backdrop, Button, CircularProgress, Dialog, DialogTitle, Divider, Snackbar, TablePagination } from \"@mui/material\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"../style/theme\";\nimport InvoiceList from \"./table/InvoiceList\";\nimport InvoiceOptions from \"./options/InvoiceOptions\";\nimport fetchData from \"./crudOperations/fetchData\";\nimport updateData from \"./crudOperations/updateData\";\nimport postData from \"./crudOperations/postData\";\nimport Add from \"./options/Add\";\nimport EditInvoice from \"./options/Edit\";\nimport DeleteInvoice from \"./options/DeleteInvoice\";\nimport deleteData from \"./crudOperations/deleteData\";\nimport Search from \"./options/Search\";\nimport AdvancedSearch from \"./options/AdvanceSearch\";\nimport AnalyticsView from \"./options/AnalyticsView\";\nimport BarChart from \"./chart/BarChart\";\nimport predictData from \"./crudOperations/predictData\";\n\nfunction Dashboard() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      rows = _useState2[0],\n      setRows = _useState2[1]; // data which need to be displayed\n\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedRows = _useState4[0],\n      setSelectedRows = _useState4[1]; // selected rows\n\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      numSelectedRows = _useState6[0],\n      setNumSelectedRows = _useState6[1]; // for filtering\n\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      filter = _useState8[0],\n      setFilter = _useState8[1]; // to reload data\n\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      reloadData = _useState10[0],\n      setReloadData = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      showAlert = _useState12[0],\n      setShowAlert = _useState12[1];\n\n  var _useState13 = useState(\"warning\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      alertSeverity = _useState14[0],\n      setAlertSeverity = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      alertMessage = _useState16[0],\n      setAlertMessage = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      loading = _useState18[0],\n      setLoading = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      showDialog = _useState20[0],\n      setShowDialog = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      dialog = _useState22[0],\n      setDialog = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      deleteMode = _useState24[0],\n      setDeleteMode = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      editMode = _useState26[0],\n      setEditMode = _useState26[1]; //for sorting\n\n\n  var _useState27 = useState(\"sl_no\"),\n      _useState28 = _slicedToArray(_useState27, 2),\n      activeSortColumn = _useState28[0],\n      setActiveSortColumn = _useState28[1]; // column used for sorting\n\n\n  var _useState29 = useState(\"asc\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      sortDirection = _useState30[0],\n      setSortDirection = _useState30[1]; // direction used for sorting\n  // for tablepagination\n\n\n  var _useState31 = useState(0),\n      _useState32 = _slicedToArray(_useState31, 2),\n      currentPage = _useState32[0],\n      setCurrentPage = _useState32[1];\n\n  var _useState33 = useState(10),\n      _useState34 = _slicedToArray(_useState33, 2),\n      rowsPerPage = _useState34[0],\n      setRowsPerPage = _useState34[1];\n\n  var _useState35 = useState(0),\n      _useState36 = _slicedToArray(_useState35, 2),\n      totalRows = _useState36[0],\n      setTotalRows = _useState36[1]; // update from db\n  // for analytics view\n\n\n  var _useState37 = useState([]),\n      _useState38 = _slicedToArray(_useState37, 2),\n      analyticsData = _useState38[0],\n      setAnalyticsData = _useState38[1]; // turns on/off (edit, delete) mode\n\n\n  useEffect(function () {\n    if (numSelectedRows <= 0) {\n      setEditMode(false);\n      setDeleteMode(false);\n    } else {\n      setDeleteMode(true);\n    }\n\n    if (numSelectedRows === 1) {\n      setEditMode(true);\n    } else {\n      setEditMode(false);\n    }\n  }, [numSelectedRows, setEditMode, setDeleteMode]);\n  useEffect(function () {\n    setRows([]);\n\n    if (reloadData) {\n      reload();\n      setReloadData(false);\n    }\n  }, [reloadData]);\n  useEffect(function () {\n    setReloadData(true);\n  }, [currentPage, rowsPerPage, activeSortColumn, sortDirection, filter]);\n\n  var handleOptionsClick = function handleOptionsClick(type) {\n    setDialog(type);\n\n    if (type === \"refresh\") {\n      setReloadData(true);\n    } else if (type === \"predict\") {\n      onPredictClick();\n    } else setShowDialog(true);\n  };\n\n  var onPredictClick = function onPredictClick() {\n    setLoading(true);\n    var docIds = [];\n    Object.keys(selectedRows).forEach(function (key) {\n      docIds.push(parseInt([selectedRows[key][\"doc_id\"]]));\n    });\n    var dataObj = Object.values(selectedRows);\n    dataObj = JSON.parse(JSON.stringify(dataObj));\n    var aging = {};\n    predictData({\n      data: docIds\n    }).then(function (_ref) {\n      var data = _ref.data;\n      data.forEach(function (d) {\n        var temp = parseInt(d[\"doc_id\"]);\n        aging[temp] = d.aging_bucket;\n      });\n      dataObj.forEach(function (obj) {\n        obj[\"aging_bucket\"] = \"Nan\";\n\n        if (aging[obj[\"doc_id\"]] !== undefined) {\n          obj[\"aging_bucket\"] = aging[obj[\"doc_id\"]];\n        }\n      });\n      updateData(dataObj).then(function () {\n        setLoading(false);\n        setDialog(\"predict\");\n        setShowDialog(true);\n        setReloadData(true);\n      });\n    }).catch(function () {\n      setLoading(false);\n      setAlertSeverity(\"error\");\n      setAlertMessage(\"Failed to get predictions\");\n      setShowAlert(true);\n      setReloadData(true);\n    });\n  };\n\n  var onAddClick = function onAddClick(dataObj) {\n    setShowDialog(false);\n    setLoading(true);\n    postData(dataObj).then(function () {\n      setLoading(false);\n      setAlertSeverity(\"success\");\n      setAlertMessage(\"Data Added Successfully\");\n      setShowAlert(true);\n      setReloadData(true);\n    }).catch(function () {\n      setLoading(false);\n      setAlertSeverity(\"error\");\n      setAlertMessage(\"Failed to Add Data\");\n      setShowAlert(true);\n      setReloadData(true);\n    });\n  };\n\n  var onEditClick = function onEditClick(invoiceCurrency, cust_terms) {\n    setShowDialog(false);\n    setLoading(true);\n    var dataObj = Object.values(selectedRows)[0]; // deep copying\n\n    dataObj = JSON.parse(JSON.stringify(dataObj));\n\n    if (invoiceCurrency) {\n      dataObj.invoice_currency = invoiceCurrency;\n    }\n\n    if (cust_terms) {\n      dataObj.cust_payment_terms = cust_terms;\n    }\n\n    if (!invoiceCurrency && !cust_terms) {\n      setLoading(false);\n      setAlertMessage(\"No Changes Were Made.\");\n      setAlertSeverity(\"info\");\n      setShowAlert(true);\n    } else {\n      updateData(dataObj).then(function () {\n        setLoading(false);\n        setAlertSeverity(\"success\");\n        setAlertMessage(\"Successfully Edited The Data\");\n        setShowAlert(true);\n        setReloadData(true);\n      }).catch(function () {\n        setLoading(false);\n        setAlertSeverity(\"error\");\n        setAlertMessage(\"Failed To Edit The Data\");\n        setShowAlert(true);\n      });\n    }\n  };\n\n  var onDeleteClick = function onDeleteClick() {\n    setShowDialog(false);\n    setLoading(true);\n    deleteData(Object.values(selectedRows)).then(function () {\n      setLoading(false);\n      setAlertSeverity(\"success\");\n      setAlertMessage(\"Successfully deleted the record(s)\");\n      setShowAlert(true);\n      setReloadData(true);\n    }).catch(function (e) {\n      setLoading(false);\n      setAlertSeverity(\"error\");\n      setAlertMessage(\"Deletion failed!\");\n      setShowAlert(true);\n    });\n  };\n\n  var onAdvanceSearch = function onAdvanceSearch(docId, invoiceId, custNumber, year) {\n    setShowDialog(false);\n    setLoading(true);\n\n    if (!docId && !invoiceId && !custNumber && !year) {\n      setLoading(false);\n      setAlertMessage(\"No input were given\");\n      setAlertSeverity(\"info\");\n      setShowAlert(true);\n    } else {\n      setReloadData(true);\n    }\n\n    var newFilter = {};\n\n    if (docId) {\n      newFilter[\"doc_id\"] = docId;\n    }\n\n    if (invoiceId) {\n      newFilter[\"invoice_id\"] = invoiceId;\n    }\n\n    if (custNumber) {\n      newFilter[\"cust_number\"] = custNumber;\n    }\n\n    if (year) {\n      newFilter[\"buisness_year\"] = year;\n    }\n\n    setFilter(newFilter);\n  };\n\n  var onAnalyticsClick = function onAnalyticsClick(clearDate, dueDate, baselineDate, invoiceCurr) {\n    setLoading(true);\n    setShowDialog(false);\n\n    if (!clearDate[0] && !dueDate[0] && !baselineDate[0] && !invoiceCurr) {\n      setLoading(false);\n      setAlertMessage(\"No input were given\");\n      setAlertSeverity(\"info\");\n      setShowAlert(true);\n    } else {\n      var newFilter = {\n        analytics: true\n      };\n\n      if (clearDate[0] && clearDate[1]) {\n        newFilter[\"clearDateFrom\"] = clearDate[0];\n        newFilter[\"clearDateTo\"] = clearDate[1];\n      }\n\n      if (dueDate[0] && dueDate[1]) {\n        newFilter[\"dueDateFrom\"] = dueDate[0];\n        newFilter[\"dueDateTo\"] = dueDate[1];\n      }\n\n      if (baselineDate[0] && baselineDate[1]) {\n        newFilter[\"baselineDateFrom\"] = baselineDate[0];\n        newFilter[\"baselineDateTo\"] = baselineDate[1];\n      }\n\n      if (invoiceCurr) {\n        newFilter[\"invoiceCurr\"] = invoiceCurr;\n      }\n\n      fetchData(currentPage, rowsPerPage, activeSortColumn, sortDirection, newFilter).then(function (data) {\n        setAnalyticsData(data);\n        setDialog(\"chart\");\n        setShowDialog(true);\n        setLoading(false);\n      }).catch(function () {\n        setAlertSeverity(\"error\");\n        setAlertMessage(\"Failed to load data\");\n        setShowAlert(true);\n        setLoading(false);\n        setShowDialog(false);\n      });\n    }\n  };\n\n  var onCancelClick = function onCancelClick() {\n    setShowDialog(false);\n    setAlertSeverity(\"warning\");\n    setAlertMessage(\"Cancelled by user\");\n    setShowAlert(true);\n  };\n\n  var reload = function reload() {\n    setLoading(true);\n    setNumSelectedRows(0);\n    setSelectedRows({});\n    fetchData(currentPage, rowsPerPage, activeSortColumn, sortDirection, filter).then(function (data) {\n      var temp = data.pop();\n      console.log(data);\n      setTotalRows(parseInt(temp.totalRows));\n      setRows(data);\n      setLoading(false);\n    }).catch(function () {\n      setAlertSeverity(\"error\");\n      setAlertMessage(\"Failed to load data\");\n      setShowAlert(true);\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: showDialog,\n    maxWidth: \"lg\",\n    fullScreen: dialog === \"chart\" ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }\n  }, dialog === \"add\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }, \"ADD\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Add, {\n    open: showDialog && dialog === \"add\",\n    setOpen: setShowDialog,\n    onAddClick: onAddClick,\n    onCancelClick: onCancelClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  })) : null, dialog === \"edit\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditInvoice, {\n    onCancelClick: onCancelClick,\n    onEditClick: onEditClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  })) : null, dialog === \"delete\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DeleteInvoice, {\n    onDeleteClick: onDeleteClick,\n    onCancelClick: onCancelClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  })) : null, dialog === \"advancedsearch\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }\n  }, \"Advance Search\"), /*#__PURE__*/React.createElement(AdvancedSearch, {\n    onSearchClick: onAdvanceSearch,\n    onCancelClick: onCancelClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 13\n    }\n  })) : null, dialog === \"analytics\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }\n  }, \"Analytics view\"), /*#__PURE__*/React.createElement(AnalyticsView, {\n    onAnalyticsClick: onAnalyticsClick,\n    onCancelClick: onCancelClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 13\n    }\n  })) : null, dialog === \"chart\" ? /*#__PURE__*/React.createElement(BarChart, {\n    analyticsData: analyticsData,\n    setShowDialog: setShowDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 11\n    }\n  }) : null, dialog === \"predict\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 13\n    }\n  }, \"Prediction\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"prediction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 15\n    }\n  }, \"Prediction Data Updated Successfully.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"prediction-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: function onClick() {\n      return setShowDialog(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 17\n    }\n  }, \"Close\")))) : null), /*#__PURE__*/React.createElement(InvoiceOptions, {\n    deleteMode: deleteMode,\n    editMode: editMode,\n    handleOptionsClick: handleOptionsClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    filter: filter,\n    setFilter: setFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(InvoiceList, {\n    rows: rows,\n    selectedRows: selectedRows,\n    setSelectedRows: setSelectedRows,\n    numSelectedRows: numSelectedRows,\n    setNumSelectedRows: setNumSelectedRows,\n    activeSortColumn: activeSortColumn,\n    setActiveSortColumn: setActiveSortColumn,\n    sortDirection: sortDirection,\n    setSortDirection: setSortDirection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 20, 50],\n    component: \"div\",\n    count: totalRows // total records in db\n    ,\n    rowsPerPage: rowsPerPage,\n    page: currentPage,\n    onPageChange: function onPageChange(e, page) {\n      setCurrentPage(page);\n    },\n    onRowsPerPageChange: function onRowsPerPageChange(e) {\n      setRowsPerPage(e.target.value);\n    },\n    showFirstButton: true,\n    showLastButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Snackbar, {\n    open: showAlert,\n    autoHideDuration: 2500,\n    onClose: function onClose() {\n      return setShowAlert(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: alertSeverity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }\n  }, alertMessage)), /*#__PURE__*/React.createElement(Backdrop, {\n    open: loading,\n    sx: {\n      color: \"#fff\",\n      zIndex: function zIndex(theme) {\n        return theme.zIndex.drawer + 1;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["D:/highradius/HRC/front_end/src/component/Dashboard.js"],"names":["React","useEffect","useState","Alert","Backdrop","Button","CircularProgress","Dialog","DialogTitle","Divider","Snackbar","TablePagination","ThemeProvider","theme","InvoiceList","InvoiceOptions","fetchData","updateData","postData","Add","EditInvoice","DeleteInvoice","deleteData","Search","AdvancedSearch","AnalyticsView","BarChart","predictData","Dashboard","rows","setRows","selectedRows","setSelectedRows","numSelectedRows","setNumSelectedRows","filter","setFilter","reloadData","setReloadData","showAlert","setShowAlert","alertSeverity","setAlertSeverity","alertMessage","setAlertMessage","loading","setLoading","showDialog","setShowDialog","dialog","setDialog","deleteMode","setDeleteMode","editMode","setEditMode","activeSortColumn","setActiveSortColumn","sortDirection","setSortDirection","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","totalRows","setTotalRows","analyticsData","setAnalyticsData","reload","handleOptionsClick","type","onPredictClick","docIds","Object","keys","forEach","key","push","parseInt","dataObj","values","JSON","parse","stringify","aging","data","then","d","temp","aging_bucket","obj","undefined","catch","onAddClick","onEditClick","invoiceCurrency","cust_terms","invoice_currency","cust_payment_terms","onDeleteClick","e","onAdvanceSearch","docId","invoiceId","custNumber","year","newFilter","onAnalyticsClick","clearDate","dueDate","baselineDate","invoiceCurr","analytics","onCancelClick","pop","console","log","page","target","value","color","zIndex","drawer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Alert,\r\n  Backdrop,\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogTitle,\r\n  Divider,\r\n  Snackbar,\r\n  TablePagination,\r\n} from \"@mui/material\";\r\n\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\n\r\nimport theme from \"../style/theme\";\r\nimport InvoiceList from \"./table/InvoiceList\";\r\nimport InvoiceOptions from \"./options/InvoiceOptions\";\r\n\r\nimport fetchData from \"./crudOperations/fetchData\";\r\nimport updateData from \"./crudOperations/updateData\";\r\nimport postData from \"./crudOperations/postData\";\r\n\r\nimport Add from \"./options/Add\";\r\nimport EditInvoice from \"./options/Edit\";\r\nimport DeleteInvoice from \"./options/DeleteInvoice\";\r\nimport deleteData from \"./crudOperations/deleteData\";\r\nimport Search from \"./options/Search\";\r\nimport AdvancedSearch from \"./options/AdvanceSearch\";\r\nimport AnalyticsView from \"./options/AnalyticsView\";\r\nimport BarChart from \"./chart/BarChart\";\r\nimport predictData from \"./crudOperations/predictData\";\r\n\r\nfunction Dashboard() {\r\n  const [rows, setRows] = useState([]); // data which need to be displayed\r\n  const [selectedRows, setSelectedRows] = useState({}); // selected rows\r\n  const [numSelectedRows, setNumSelectedRows] = useState(0);\r\n\r\n  // for filtering\r\n  const [filter, setFilter] = useState({});\r\n\r\n  // to reload data\r\n  const [reloadData, setReloadData] = useState(false);\r\n\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [alertSeverity, setAlertSeverity] = useState(\"warning\");\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [showDialog, setShowDialog] = useState(false);\r\n  const [dialog, setDialog] = useState(\"\");\r\n\r\n  const [deleteMode, setDeleteMode] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  //for sorting\r\n  const [activeSortColumn, setActiveSortColumn] = useState(\"sl_no\"); // column used for sorting\r\n  const [sortDirection, setSortDirection] = useState(\"asc\"); // direction used for sorting\r\n\r\n  // for tablepagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [totalRows, setTotalRows] = useState(0); // update from db\r\n\r\n  // for analytics view\r\n  const [analyticsData, setAnalyticsData] = useState([]);\r\n\r\n  // turns on/off (edit, delete) mode\r\n  useEffect(() => {\r\n    if (numSelectedRows <= 0) {\r\n      setEditMode(false);\r\n      setDeleteMode(false);\r\n    } else {\r\n      setDeleteMode(true);\r\n    }\r\n\r\n    if (numSelectedRows === 1) {\r\n      setEditMode(true);\r\n    } else {\r\n      setEditMode(false);\r\n    }\r\n  }, [numSelectedRows, setEditMode, setDeleteMode]);\r\n\r\n  useEffect(() => {\r\n    setRows([]);\r\n    if (reloadData) {\r\n      reload();\r\n      setReloadData(false);\r\n    }\r\n  }, [reloadData]);\r\n\r\n  useEffect(() => {\r\n    setReloadData(true);\r\n  }, [currentPage, rowsPerPage, activeSortColumn, sortDirection, filter]);\r\n\r\n  const handleOptionsClick = (type) => {\r\n    setDialog(type);\r\n    if (type === \"refresh\") {\r\n      setReloadData(true);\r\n    } else if (type === \"predict\") {\r\n      onPredictClick();\r\n    } else setShowDialog(true);\r\n  };\r\n\r\n  const onPredictClick = () => {\r\n    setLoading(true);\r\n    const docIds = [];\r\n    Object.keys(selectedRows).forEach((key) => {\r\n      docIds.push(parseInt([selectedRows[key][\"doc_id\"]]));\r\n    });\r\n\r\n    let dataObj = Object.values(selectedRows);\r\n    dataObj = JSON.parse(JSON.stringify(dataObj));\r\n\r\n    let aging = {};\r\n    predictData({ data: docIds })\r\n      .then(({ data }) => {\r\n        data.forEach((d) => {\r\n          const temp = parseInt(d[\"doc_id\"]);\r\n          aging[temp] = d.aging_bucket;\r\n        });\r\n\r\n        dataObj.forEach((obj) => {\r\n          obj[\"aging_bucket\"] = \"Nan\";\r\n          if (aging[obj[\"doc_id\"]] !== undefined) {\r\n            obj[\"aging_bucket\"] = aging[obj[\"doc_id\"]];\r\n          }\r\n        });\r\n\r\n        updateData(dataObj).then(() => {\r\n          setLoading(false);\r\n          setDialog(\"predict\");\r\n          setShowDialog(true);\r\n          setReloadData(true);\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        setAlertSeverity(\"error\");\r\n        setAlertMessage(\"Failed to get predictions\");\r\n        setShowAlert(true);\r\n        setReloadData(true);\r\n      });\r\n  };\r\n\r\n  const onAddClick = (dataObj) => {\r\n    setShowDialog(false);\r\n    setLoading(true);\r\n    postData(dataObj)\r\n      .then(() => {\r\n        setLoading(false);\r\n        setAlertSeverity(\"success\");\r\n        setAlertMessage(\"Data Added Successfully\");\r\n        setShowAlert(true);\r\n        setReloadData(true);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        setAlertSeverity(\"error\");\r\n        setAlertMessage(\"Failed to Add Data\");\r\n        setShowAlert(true);\r\n        setReloadData(true);\r\n      });\r\n  };\r\n\r\n  const onEditClick = (invoiceCurrency, cust_terms) => {\r\n    setShowDialog(false);\r\n    setLoading(true);\r\n\r\n    let dataObj = Object.values(selectedRows)[0];\r\n\r\n    // deep copying\r\n    dataObj = JSON.parse(JSON.stringify(dataObj));\r\n\r\n    if (invoiceCurrency) {\r\n      dataObj.invoice_currency = invoiceCurrency;\r\n    }\r\n\r\n    if (cust_terms) {\r\n      dataObj.cust_payment_terms = cust_terms;\r\n    }\r\n\r\n    if (!invoiceCurrency && !cust_terms) {\r\n      setLoading(false);\r\n      setAlertMessage(\"No Changes Were Made.\");\r\n      setAlertSeverity(\"info\");\r\n      setShowAlert(true);\r\n    } else {\r\n      updateData(dataObj)\r\n        .then(() => {\r\n          setLoading(false);\r\n          setAlertSeverity(\"success\");\r\n          setAlertMessage(\"Successfully Edited The Data\");\r\n          setShowAlert(true);\r\n          setReloadData(true);\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n          setAlertSeverity(\"error\");\r\n          setAlertMessage(\"Failed To Edit The Data\");\r\n          setShowAlert(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onDeleteClick = () => {\r\n    setShowDialog(false);\r\n    setLoading(true);\r\n\r\n    deleteData(Object.values(selectedRows))\r\n      .then(() => {\r\n        setLoading(false);\r\n        setAlertSeverity(\"success\");\r\n        setAlertMessage(\"Successfully deleted the record(s)\");\r\n        setShowAlert(true);\r\n        setReloadData(true);\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        setAlertSeverity(\"error\");\r\n        setAlertMessage(\"Deletion failed!\");\r\n        setShowAlert(true);\r\n      });\r\n  };\r\n\r\n  const onAdvanceSearch = (docId, invoiceId, custNumber, year) => {\r\n    setShowDialog(false);\r\n    setLoading(true);\r\n    if (!docId && !invoiceId && !custNumber && !year) {\r\n      setLoading(false);\r\n      setAlertMessage(\"No input were given\");\r\n      setAlertSeverity(\"info\");\r\n      setShowAlert(true);\r\n    } else {\r\n      setReloadData(true);\r\n    }\r\n\r\n    let newFilter = {};\r\n    if (docId) {\r\n      newFilter[\"doc_id\"] = docId;\r\n    }\r\n    if (invoiceId) {\r\n      newFilter[\"invoice_id\"] = invoiceId;\r\n    }\r\n    if (custNumber) {\r\n      newFilter[\"cust_number\"] = custNumber;\r\n    }\r\n    if (year) {\r\n      newFilter[\"buisness_year\"] = year;\r\n    }\r\n\r\n    setFilter(newFilter);\r\n  };\r\n\r\n  const onAnalyticsClick = (clearDate, dueDate, baselineDate, invoiceCurr) => {\r\n    setLoading(true);\r\n    setShowDialog(false);\r\n    if (!clearDate[0] && !dueDate[0] && !baselineDate[0] && !invoiceCurr) {\r\n      setLoading(false);\r\n      setAlertMessage(\"No input were given\");\r\n      setAlertSeverity(\"info\");\r\n      setShowAlert(true);\r\n    } else {\r\n      let newFilter = { analytics: true };\r\n      if (clearDate[0] && clearDate[1]) {\r\n        newFilter[\"clearDateFrom\"] = clearDate[0];\r\n        newFilter[\"clearDateTo\"] = clearDate[1];\r\n      }\r\n\r\n      if (dueDate[0] && dueDate[1]) {\r\n        newFilter[\"dueDateFrom\"] = dueDate[0];\r\n        newFilter[\"dueDateTo\"] = dueDate[1];\r\n      }\r\n\r\n      if (baselineDate[0] && baselineDate[1]) {\r\n        newFilter[\"baselineDateFrom\"] = baselineDate[0];\r\n        newFilter[\"baselineDateTo\"] = baselineDate[1];\r\n      }\r\n\r\n      if (invoiceCurr) {\r\n        newFilter[\"invoiceCurr\"] = invoiceCurr;\r\n      }\r\n\r\n      fetchData(\r\n        currentPage,\r\n        rowsPerPage,\r\n        activeSortColumn,\r\n        sortDirection,\r\n        newFilter\r\n      )\r\n        .then((data) => {\r\n          setAnalyticsData(data);\r\n          setDialog(\"chart\");\r\n          setShowDialog(true);\r\n          setLoading(false);\r\n        })\r\n        .catch(() => {\r\n          setAlertSeverity(\"error\");\r\n          setAlertMessage(\"Failed to load data\");\r\n          setShowAlert(true);\r\n          setLoading(false);\r\n          setShowDialog(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onCancelClick = () => {\r\n    setShowDialog(false);\r\n    setAlertSeverity(\"warning\");\r\n    setAlertMessage(\"Cancelled by user\");\r\n    setShowAlert(true);\r\n  };\r\n\r\n  const reload = () => {\r\n    setLoading(true);\r\n    setNumSelectedRows(0);\r\n    setSelectedRows({});\r\n\r\n    fetchData(currentPage, rowsPerPage, activeSortColumn, sortDirection, filter)\r\n      .then((data) => {\r\n        const temp = data.pop();\r\n        console.log(data);\r\n        setTotalRows(parseInt(temp.totalRows));\r\n        setRows(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setAlertSeverity(\"error\");\r\n        setAlertMessage(\"Failed to load data\");\r\n        setShowAlert(true);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      {/* dailogbox */}\r\n      <Dialog\r\n        open={showDialog}\r\n        maxWidth={\"lg\"}\r\n        fullScreen={dialog === \"chart\" ? true : false}\r\n      >\r\n        {dialog === \"add\" ? (\r\n          <>\r\n            <DialogTitle>ADD</DialogTitle>\r\n            <Divider />\r\n            <Add\r\n              open={showDialog && dialog === \"add\"}\r\n              setOpen={setShowDialog}\r\n              onAddClick={onAddClick}\r\n              onCancelClick={onCancelClick}\r\n            />\r\n          </>\r\n        ) : null}\r\n\r\n        {dialog === \"edit\" ? (\r\n          <>\r\n            <DialogTitle>Edit</DialogTitle>\r\n            <Divider />\r\n            <EditInvoice\r\n              onCancelClick={onCancelClick}\r\n              onEditClick={onEditClick}\r\n            />\r\n          </>\r\n        ) : null}\r\n\r\n        {dialog === \"delete\" ? (\r\n          <>\r\n            <DialogTitle>Delete</DialogTitle>\r\n            <Divider />\r\n            <DeleteInvoice\r\n              onDeleteClick={onDeleteClick}\r\n              onCancelClick={onCancelClick}\r\n            />\r\n          </>\r\n        ) : null}\r\n\r\n        {/* advanced search */}\r\n        {dialog === \"advancedsearch\" ? (\r\n          <>\r\n            <DialogTitle>Advance Search</DialogTitle>\r\n            <AdvancedSearch\r\n              onSearchClick={onAdvanceSearch}\r\n              onCancelClick={onCancelClick}\r\n            />\r\n          </>\r\n        ) : null}\r\n\r\n        {/* analytics view */}\r\n        {dialog === \"analytics\" ? (\r\n          <>\r\n            <DialogTitle>Analytics view</DialogTitle>\r\n\r\n            <AnalyticsView\r\n              onAnalyticsClick={onAnalyticsClick}\r\n              onCancelClick={onCancelClick}\r\n            />\r\n          </>\r\n        ) : null}\r\n\r\n        {/* Chart */}\r\n        {dialog === \"chart\" ? (\r\n          <BarChart\r\n            analyticsData={analyticsData}\r\n            setShowDialog={setShowDialog}\r\n          />\r\n        ) : null}\r\n\r\n        {/* Prediction */}\r\n        {dialog === \"predict\" ? (\r\n          <>\r\n            <DialogTitle>Prediction</DialogTitle>\r\n            <Divider />\r\n            <div className=\"prediction\">\r\n              <div>Prediction Data Updated Successfully.</div>\r\n              <div className=\"prediction-button\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  onClick={() => setShowDialog(false)}\r\n                >\r\n                  Close\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : null}\r\n      </Dialog>\r\n\r\n      <InvoiceOptions\r\n        deleteMode={deleteMode}\r\n        editMode={editMode}\r\n        handleOptionsClick={handleOptionsClick}\r\n      >\r\n        <Search filter={filter} setFilter={setFilter} />\r\n      </InvoiceOptions>\r\n      <InvoiceList\r\n        rows={rows}\r\n        selectedRows={selectedRows}\r\n        setSelectedRows={setSelectedRows}\r\n        numSelectedRows={numSelectedRows}\r\n        setNumSelectedRows={setNumSelectedRows}\r\n        activeSortColumn={activeSortColumn}\r\n        setActiveSortColumn={setActiveSortColumn}\r\n        sortDirection={sortDirection}\r\n        setSortDirection={setSortDirection}\r\n      />\r\n\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 20, 50]}\r\n        component=\"div\"\r\n        count={totalRows} // total records in db\r\n        rowsPerPage={rowsPerPage}\r\n        page={currentPage}\r\n        onPageChange={(e, page) => {\r\n          setCurrentPage(page);\r\n        }}\r\n        onRowsPerPageChange={(e) => {\r\n          setRowsPerPage(e.target.value);\r\n        }}\r\n        showFirstButton\r\n        showLastButton\r\n      />\r\n\r\n      <Snackbar\r\n        open={showAlert}\r\n        autoHideDuration={2500}\r\n        onClose={() => setShowAlert(false)}\r\n      >\r\n        <Alert severity={alertSeverity}>{alertMessage}</Alert>\r\n      </Snackbar>\r\n\r\n      {/* for loading */}\r\n      <Backdrop\r\n        open={loading}\r\n        sx={{\r\n          color: \"#fff\",\r\n          zIndex: (theme) => theme.zIndex.drawer + 1,\r\n        }}\r\n      >\r\n        <CircularProgress />\r\n      </Backdrop>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}